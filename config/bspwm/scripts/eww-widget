#!/bin/bash
#===========================================================================
#
#
#███╗   ███╗ █████╗ ██████╗ ██╗ ██████╗ ██████╗ ██████╗  ██████╗ ███╗   ███╗
#████╗ ████║██╔══██╗██╔══██╗██║██╔═══██╗██╔══██╗██╔══██╗██╔═══██╗████╗ ████║
#██╔████╔██║███████║██████╔╝██║██║   ██║██████╔╝██████╔╝██║   ██║██╔████╔██║
#██║╚██╔╝██║██╔══██║██╔══██╗██║██║   ██║██╔══██╗██╔══██╗██║   ██║██║╚██╔╝██║
#██║ ╚═╝ ██║██║  ██║██║  ██║██║╚██████╔╝██║  ██║██║  ██║╚██████╔╝██║ ╚═╝ ██║
#╚═╝     ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝ ╚═════╝ ╚═╝  ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝     ╚═╝                                                                          
#                          MarioRRom's Dotfiles
#                 https://github.com/MarioRRom/bspwm-dotfiles
#===========================================================================

## Este script ejecuta el widget en el monitor activo ##
##  Añade soporte a Multi-Monitor sin tantos rodeos   ##

# Comprobar si xdotool está instalado
if ! command -v xdotool &> /dev/null; then
    notify-send "xdotool no está instalado. Por favor, instálalo para continuar."
    exit 1
fi

# Verificar si xrandr está disponible
if type "xrandr" > /dev/null; then
    # Obtener la posición actual del mouse
    mouse_coords=$(xdotool getmouselocation --shell)
    mouse_x=$(echo "$mouse_coords" | grep X= | cut -d= -f2)
    mouse_y=$(echo "$mouse_coords" | grep Y= | cut -d= -f2)

    # Iterar sobre las pantallas conectadas
    screen_index=0
    for m in $(xrandr --query | grep " connected" | cut -d" " -f1); do
        # Obtener las coordenadas y resolución de la pantalla actual
        screen_res=$(xrandr --query | grep "$m" | grep -oP '[0-9]+x[0-9]+\+[0-9]+\+[0-9]+')
        screen_x=$(echo "$screen_res" | cut -d'+' -f2)
        screen_y=$(echo "$screen_res" | cut -d'+' -f3)
        screen_width=$(echo "$screen_res" | cut -d'x' -f1)
        screen_height=$(echo "$screen_res" | cut -d'x' -f2 | cut -d'+' -f1)

        # Comprobar si el mouse está en la pantalla actual
        if [ "$mouse_x" -ge "$screen_x" ] && [ "$mouse_x" -le $(($screen_x + $screen_width)) ] &&
           [ "$mouse_y" -ge "$screen_y" ] && [ "$mouse_y" -le $(($screen_y + $screen_height)) ]; then
            # Verificar si se pasó algún argumento
            if [ $# -eq 0 ]; then
                echo "No se proporcionaron argumentos. Por favor, pasa un comando a Eww."
                exit 1
            else
                # Si hay argumentos, ejecutar eww con los parámetros proporcionados
                Eww "$@" --screen $screen_index &
            fi
            break
        fi

        # Incrementar índice de pantalla
        screen_index=$((screen_index + 1))
    done
else
    # Si no hay xrandr, ejecutar eww de manera predeterminada con los argumentos proporcionados
    if [ $# -eq 0 ]; then
        echo "No se proporcionaron argumentos. Por favor, pasa un comando a Eww."
        exit 1
    else
        Eww "$@" &
    fi
fi
