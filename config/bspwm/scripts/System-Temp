#!/bin/bash
#===========================================================================
#
#
#███╗   ███╗ █████╗ ██████╗ ██╗ ██████╗ ██████╗ ██████╗  ██████╗ ███╗   ███╗
#████╗ ████║██╔══██╗██╔══██╗██║██╔═══██╗██╔══██╗██╔══██╗██╔═══██╗████╗ ████║
#██╔████╔██║███████║██████╔╝██║██║   ██║██████╔╝██████╔╝██║   ██║██╔████╔██║
#██║╚██╔╝██║██╔══██║██╔══██╗██║██║   ██║██╔══██╗██╔══██╗██║   ██║██║╚██╔╝██║
#██║ ╚═╝ ██║██║  ██║██║  ██║██║╚██████╔╝██║  ██║██║  ██║╚██████╔╝██║ ╚═╝ ██║
#╚═╝     ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝ ╚═════╝ ╚═╝  ╚═╝ ╚═╝ ╚═╝ ╚═════╝ ╚═╝     ╚═╝                                                                          
#                          MarioRRom's Dotfiles
#                 https://github.com/MarioRRom/bspwm-dotfiles
#===========================================================================

##  Este script se utiliza para obtener las temperaturas de la pc  ##
## independientemente del hardware que poseeas, utilizado para eww ##

# Rutas de temperatura
PATHS=(
    "/sys/class/thermal/thermal_zone*/temp"
    "/sys/devices/platform/coretemp.*/hwmon/hwmon*/temp*_input"
    "/sys/devices/virtual/thermal/thermal_zone*/temp"
    "/sys/devices/virtual/thermal/cooling_device*/temp"
    "/sys/bus/acpi/devices/LNXTHERM:*/thermal_zone/temp"
    "/sys/devices/platform/samsung/thermal/temperature"
    "/sys/class/hwmon/hwmon*/temp*_input"
    "/sys/devices/pci*/*/hwmon/hwmon*/temp1_input"
    "/sys/devices/platform/thinkpad_hwmon/hwmon/hwmon*/temp*_input"
    "/sys/devices/virtual/thermal/cooling_device*/cur_state"
)

find_cpu_temp() {
    local max_temp=0
    local current_temp

    for path in "${PATHS[@]}"; do
        for file in $path; do
            if [[ -f "$file" ]]; then
                current_temp=$(awk '{print int($1/1000)}' "$file" 2>/dev/null)
                if [[ "$current_temp" =~ ^[0-9]+$ ]] && (( current_temp > max_temp )); then
                    max_temp=$current_temp
                fi
            fi
        done
    done
    
    [[ $max_temp -gt 0 ]] && echo "$max_temp" || echo "null"
}

convert_to_fahrenheit() {
    local celsius=$1
    echo $(( (celsius * 9 / 5) + 32 ))
}

# Obtener temperatura en Celsius
TEMP=$(find_cpu_temp)

# Modo --get para devolver solo el número
if [[ "$1" == "--get" ]]; then
    echo "$TEMP"
    exit 0
fi

# Leer configuración de unidad desde Config-Editor
UNIT=$(Config-Editor --leer temp_unit 2>/dev/null)

# Imprimir la temperatura según la configuración
case "$UNIT" in
    "celsius")
        echo "${TEMP}°C"
        ;;
    "fahrenheit")
        echo "$(convert_to_fahrenheit $TEMP)°F"
        ;;
    *)
        echo "$TEMP"
        ;;
esac